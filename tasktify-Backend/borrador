//BUSCAR UN USUARIO
(async() => {
    try {
       const user = await User.findOne(
           {
               where: { username: 'leandro' }
           }
       );
        console.log("VALORES DE USERRRRRRRRRRRRRRRRRRRRR", user.dataValues )
        if( user === null){
            console.log("not found!!!")
        } else {
            console.log( user instanceof User)
            console.log(user.username)
        }
    
    } catch (error) {
        console.log("el error", error)
    }
})(); 

//CREAR UN USUARIO
(async() => {
    try {
        const user = await User.create(
            {
                username: ' leandro',
                password: '123',
                email: 'email@email.com'
            }
        )
    
    } catch (error) {
        console.log("el error", error)
    }
})(); 



passport.use('login', new LocalStrategy({passReqToCallback: true}, async function(req, username, password, done) {
    let user = undefined
    try{ //busco user
        user = await model.users.findOne({username: username})
        console.log(user)
    }catch (error) {
        console.log(error)        
    }
    if(!user) {
        console.log('wrong user')
        return done(null, false);
    }      
    const match = await bcrypt.compare(password, user.password)
    if(match) {
        console.log('login successfull')
        return done(null, user)
    }else{
        console.log('wrong password')
        return done(null, false)
    }
}));