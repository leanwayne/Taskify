{"version":3,"sources":["media/video1.mp4","muiThemeConfig/StyledTextField.jsx","components/login/SignIn.jsx","components/login/SignUp.jsx","layouts/Hero.jsx","components/dialogs/TutorialDialog.jsx","components/topBar/TopBar.jsx","components/Toast.jsx","components/dialogs/FormDialog.jsx","components/buttons/NewTaskButton.jsx","muiThemeConfig/StyledAccordion.jsx","components/buttons/DeleteTaskButton.jsx","components/buttons/EditTaskButton.jsx","components/buttons/TaskDoneButton.jsx","components/taskcomponents/TaskCard.jsx","components/taskcomponents/TaskContainer.jsx","layouts/MainPage.jsx","muiThemeConfig/ThemeConfig.jsx","components/Footer.jsx","App.jsx","index.jsx"],"names":["StyledTextField","styled","TextField","color","background","borderColor","transitionDelay","useStyles","makeStyles","theme","paper","margin","spacing","display","flexDirection","alignItems","backgroundColor","height","borderRadius","form","width","marginTop","textCursor","cursor","SignIn","handleForm","changeLogStatus","classes","useState","user","setUser","password","setPassword","open","setOpen","handleClose","Grid","container","justifyContent","className","onSubmit","e","preventDefault","onChange","event","target","value","variant","inputProps","maxLength","required","fullWidth","label","name","autoComplete","autoFocus","onInput","type","Button","onClick","requestOptions","method","headers","credentials","body","JSON","stringify","username","fetch","then","response","json","data","catch","err","submit","item","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","SignUp","confirmPassword","setConfirmPassword","email","setEmail","error1","setError1","error2","setError2","errorText1","setErrorText1","errorText2","setErrorText2","xs","setEmailValue","error","helperText","setPasswordValue","setConfirmPasswordValue","reg","RegExp","test","root","position","objectFit","overlay","top","left","title","paddingTop","letterSpacing","ResponsiveTitle","matches","useMediaQuery","breakpoints","down","titleProps","Typography","Hero","changeForm","setChangeForm","url","heroVideo","playing","loop","muted","direction","dialogTitle","borderTopRightRadius","borderTopLeftRadius","dialogBody","overflow","dialog","TutorialDialog","dialogTrigger","dialogCloser","align","sx","rowSpacing","marginBottom","IconButton","size","TopBar","logOut","openDialog","setOpenDialog","Box","flexGrow","AppBar","elevation","Toolbar","marginRight","res","Toast","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","FormDialog","taskHandler","task","setTitle","description","setDescription","notify","toast","info","progress","undefined","multiline","defaultValue","rows","id","disabled","NewTaskButton","newTaskHandler","Fab","StyledAccordion","Accordion","StyledAccordionSummary","AccordionSummary","StyledAccordionDetails","AccordionDetails","DeleteTaskButton","deleteTask","a","user_id","EditTaskButton","TaskDoneButton","taskDone","completed","success","TaskCard","Card","CardContent","gutterBottom","component","Divider","CardActions","TaskContainer","tasksData","containerTitle","defaultExpanded","expandIcon","map","MainPage","taskWatcher","setTaskWatcher","pendingTasks","setPendingTasks","completedTasks","setCompletedTasks","useEffect","filter","Container","maxWidth","padding","sm","md","createTheme","typography","fontFamily","join","h1","h2","h3","fontWeight","h4","h5","h6","body1","body2","palette","primary","main","light","secondary","Footer","bottom","Date","getFullYear","href","App","logged","setLogged","setUserData","ThemeProvider","passport","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16744d0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/video1.ee3d2963.mp4\";","import {styled} from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst StyledTextField = styled(TextField)({\r\n    '& .MuiInputLabel-root':{\r\n        color:'#cdcdcd'\r\n    },\r\n    '& label.Mui-focused': {\r\n        color: 'white',\r\n    },\r\n    '& .MuiFilledInput-root': {\r\n        color: 'white',\r\n        background: '#353535',\r\n        '& fieldset': {\r\n            borderColor: 'black',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#745d1d',\r\n        },\r\n        '& :-webkit-autofill': {\r\n            transitionDelay: '9999s'\r\n        },   \r\n    },\r\n});\r\nexport default StyledTextField;","import React, {useState} from 'react';\r\nimport {Button, Grid, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText} from '@mui/material/';\r\nimport {makeStyles} from '@mui/styles';\r\nimport StyledTextField from '../../muiThemeConfig/StyledTextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        margin: theme.spacing(15, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0000007d',\r\n        height: '80%',\r\n        borderRadius: '30px'   \r\n    },\r\n    form: {\r\n        width: '80%',\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    textCursor:{\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n    },\r\n}))\r\n\r\nconst SignIn = ({handleForm, changeLogStatus}) => {\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const signIn = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            credentials: 'include',\r\n            body: JSON.stringify({username: user, password: password})\r\n        }\r\n        fetch('/users/login', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            changeLogStatus(data);\r\n        })\r\n        .catch(err =>{\r\n            if(!open)setOpen(true);\r\n            //console.log(\"ERRROR\" , err);\r\n        });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setUser('');\r\n        setPassword('');\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent='center'>\r\n                <div className={classes.paper}>\r\n                    <form className={classes.form} onSubmit={e => e.preventDefault()}>\r\n                        <StyledTextField\r\n                            onChange={(event) => setUser(event.target.value)}\r\n                            variant=\"filled\"\r\n                            margin='normal'\r\n                            inputProps={{maxLength: 50}}\r\n                            required\r\n                            fullWidth\r\n                            value={user}\r\n                            label='Username'\r\n                            name='username'\r\n                            autoComplete='username'\r\n                            autoFocus\r\n                        />\r\n                        <StyledTextField\r\n                            onInput={(event) => setPassword(event.target.value)}\r\n                            variant=\"filled\"\r\n                            margin='normal'\r\n                            inputProps={{maxLength: 50}}\r\n                            required\r\n                            value={password}\r\n                            fullWidth\r\n                            label='Password'\r\n                            name='password'\r\n                            type='password'\r\n                            autoComplete='current-password'\r\n                        />                       \r\n                        <Button\r\n                            onClick={signIn}\r\n                            type='submit'\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <p onClick={handleForm} className={classes.textCursor} >\r\n                                    Don't have an account? Sign Up\r\n                                </p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            {open &&(\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >                              \r\n                    <DialogTitle>{'Sign in Error'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Invalid Username or Password\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color='secondary'>\r\n                            Try again\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\nexport default SignIn;","import React, {useState} from 'react';\r\nimport {Button, Grid,} from '@mui/material/';\r\nimport {makeStyles} from '@mui/styles';\r\nimport StyledTextField from '../../muiThemeConfig/StyledTextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        margin: theme.spacing(15, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0000007d',\r\n        height: '80%',\r\n        borderRadius: '30px'   \r\n    },\r\n    form: {\r\n        width: '80%',\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    textCursor:{\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n    },\r\n}));\r\n\r\nconst SignUp = ({handleForm, changeLogStatus}) => {\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error1, setError1] = useState(false);\r\n    const [error2, setError2] = useState(false);\r\n    const [errorText1, setErrorText1] = useState('');\r\n    const [errorText2, setErrorText2] = useState('');\r\n\r\n    const register = () => {\r\n        const reg = new RegExp(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/).test(email)\r\n        if(reg && password === confirmPassword ){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                credentials: 'include',\r\n                body: JSON.stringify({username: user, password: password, email: email})\r\n            }\r\n            fetch('/users/register', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                changeLogStatus(data);\r\n                //console.log(\"USER REGISTRADO CORRECTAMENTE\", data);\r\n            })\r\n            .catch(err =>{\r\n                setError1(true);\r\n                setErrorText1('This email is already register');       \r\n                setPassword('');\r\n                //console.log('ERROR', err);\r\n            })\r\n        }else {\r\n            if(!reg){\r\n                setError1(true); \r\n                setErrorText1('Invalid Email');     \r\n                setPassword('');\r\n            };\r\n            if(password !== confirmPassword){\r\n                setError2(true);\r\n                setErrorText2('password not match');       \r\n            };\r\n        };         \r\n    };\r\n\r\n    const setEmailValue = (event) => {\r\n        setError1(false);\r\n        setEmail(event.target.value);\r\n    };\r\n    const setPasswordValue = (event) => {\r\n        setError2(false);\r\n        setPassword(event.target.value);\r\n    };\r\n    const setConfirmPasswordValue = (event) => {\r\n        setError2(false);\r\n        setConfirmPassword(event.target.value);\r\n    };\r\n    \r\n    return (\r\n        <Grid container justifyContent='center'>\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={e => e.preventDefault()}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                                <StyledTextField\r\n                                    onChange={(event) => setUser(event.target.value)}\r\n                                    variant=\"filled\"\r\n                                    value={user}\r\n                                    inputProps={{maxLength: 50}}\r\n                                    required\r\n                                    fullWidth\r\n                                    label='Username'\r\n                                    name='UserName'\r\n                                    autoComplete='username'\r\n                                    autoFocus\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                                <StyledTextField\r\n                                    onChange={(event) => setEmailValue(event)}\r\n                                    variant=\"filled\"\r\n                                    value={email}\r\n                                    inputProps={{maxLength: 100}}\r\n                                    required\r\n                                    fullWidth\r\n                                    label='Email Address'\r\n                                    name='email'\r\n                                    autoComplete='email'\r\n                                    error={error1}\r\n                                    helperText={error1? (errorText1):(null)}\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                                <StyledTextField\r\n                                    variant=\"filled\"\r\n                                    onChange={(event) => setPasswordValue(event)}\r\n                                    inputProps={{maxLength: 20}}\r\n                                    value={password}\r\n                                    required\r\n                                    fullWidth\r\n                                    name='password'\r\n                                    label='Password'\r\n                                    type='password'\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                                <StyledTextField\r\n                                    onChange={(event) => setConfirmPasswordValue(event)}\r\n                                    variant=\"filled\"\r\n                                    value={confirmPassword}\r\n                                    inputProps={{maxLength: 50}}\r\n                                    required\r\n                                    fullWidth\r\n                                    label='Confirm Password'\r\n                                    name='Confirm-Password'\r\n                                    type='password'\r\n                                    error={error2}\r\n                                    helperText={error2? (errorText2):(null)}\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12}>                    \r\n                            <Button\r\n                                type='submit'\r\n                                fullWidth\r\n                                color= 'secondary'\r\n                                variant='contained'\r\n                                onClick={register}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <p onClick={handleForm} className={classes.textCursor}>\r\n                                Already have an account? Sign in\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\nexport default SignUp;","import React, {useState} from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport heroVideo from '../media/video1.mp4';\r\nimport {makeStyles} from '@mui/styles';\r\nimport {Typography, Grid} from '@mui/material/';\r\nimport SignIn from '../components/login/SignIn';\r\nimport SignUp from '../components/login/SignUp';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        position: 'relative',\r\n        '& video': {\r\n            objectFit: 'cover',\r\n        },\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    },\r\n    title: {\r\n        paddingTop: theme.spacing(4),\r\n        letterSpacing: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ResponsiveTitle = () => {\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n    const titleProps = {\r\n        variant: matches? 'h2' : 'h1',\r\n        color: matches? 'secondary.light' : null\r\n    }\r\n    return (\r\n        <Typography {...titleProps}>\r\n            TASKIFY\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst Hero = ({changeLogStatus}) => {\r\n    const classes = useStyles();\r\n    const [changeForm, setChangeForm] = useState(true);\r\n\r\n    const handleForm = () => {\r\n        setChangeForm(!changeForm);\r\n    };\r\n\r\n    return (\r\n        <section className={classes.root}>\r\n            <ReactPlayer\r\n                url={heroVideo}\r\n                playing\r\n                loop\r\n                muted\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n            />\r\n            <div className={classes.overlay}>\r\n                <Grid \r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item className={classes.title}>\r\n                        <ResponsiveTitle/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {changeForm?\r\n                            <SignIn handleForm={handleForm} changeLogStatus={changeLogStatus}/> :\r\n                            <SignUp handleForm={handleForm} changeLogStatus={changeLogStatus}/>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Hero;","import React from 'react';\r\nimport {makeStyles} from '@mui/styles';\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, Typography, Grid, IconButton} from '@mui/material/';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogTitle:{\r\n        backgroundColor:'#eba848',\r\n        borderTopRightRadius:'50px 20px',\r\n        borderTopLeftRadius: '50px 20px',\r\n        [theme.breakpoints.down('md')]: {\r\n            height:'100px',\r\n        },\r\n    },\r\n    dialogBody:{\r\n        backgroundColor:'#eba848', \r\n        overflow:'inherit',\r\n    },\r\n    dialog:{\r\n        '& .MuiPaper-root':{\r\n            backgroundColor:'#3e4452',\r\n            width:'70%',\r\n            [theme.breakpoints.down('md')]: {\r\n                width:'100%',\r\n                height:'100%',\r\n            }, \r\n        },\r\n    },\r\n}))\r\n\r\nconst TutorialDialog = ({dialogTrigger, dialogCloser, dialogTitle}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                className={classes.dialog}\r\n                open={dialogTrigger}\r\n                onClose={dialogCloser}\r\n            >\r\n                <DialogTitle/>\r\n                <DialogTitle className={classes.dialogTitle}>\r\n                    <Typography align='center' variant='h3' sx={{color:'#282c34'}}>\r\n                        Taskify\r\n                    </Typography>\r\n                    <Typography align='center' variant='h5' sx={{color:'#282c34'}}>\r\n                        {dialogTitle}\r\n                    </Typography>\r\n                </DialogTitle>\r\n                    <DialogContent className={classes.dialogBody}>\r\n                            <Grid \r\n                                container \r\n                                rowSpacing={2} \r\n                                direction=\"column\" \r\n                                justifyContent=\"center\" \r\n                                alignItems=\"center\"\r\n                                alignItems=\"strech\"\r\n                            >\r\n                                <Grid item xs={12} >\r\n                                    <Typography align='left' variant='h6' sx={{color:'#282c34'}}>\r\n                                        Welcome to taskify, an app to manage your daily tasks.{<br/>}\r\n                                        To start creating your tasks, press the Plus+ button on the top center of the screen.{<br/>}\r\n                                        After creating a task card, it will be placed in the Pendings list with three options.{<br/>}\r\n                                        {\r\n                                            <ul>\r\n                                                <li><CheckCircleIcon sx={{marginBottom:'-5px'}}/> Record the task as completed.</li>\r\n                                                <li><EditIcon sx={{marginBottom:'-5px'}}/> Edit the title or description of the task.</li>\r\n                                                <li><DeleteIcon sx={{marginBottom:'-5px'}}/> Delete the task.</li>\r\n                                            </ul>\r\n                                        }\r\n                                        After marking a task as completed, it will be shown on the Completed list.{<br/>}\r\n                                        Cards on this list can be kept as a record or can be deleted.\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>        \r\n                    </DialogContent>\r\n                    <DialogActions className={classes.dialogBody}>\r\n                            <IconButton\r\n                                onClick={dialogCloser}\r\n                                size=\"large\"\r\n                                sx={{color:'#1c7406'}} \r\n                            >\r\n                                <CheckCircleOutlineIcon/>\r\n                            </IconButton>\r\n                    </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\nexport default TutorialDialog;","import React, {useState} from 'react';\r\nimport {Typography, Box, AppBar, Toolbar, IconButton} from '@mui/material/';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport ArticleIcon from '@mui/icons-material/Article';\r\nimport ProfileDialog from '../dialogs/TutorialDialog';\r\n\r\nconst TopBar = ({logOut}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    \r\n    const openFormDialog = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const closeFormDialog = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const endSession = () => {\r\n        fetch(`/task/logout`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        })\r\n        .catch((err) =>{\r\n            logOut()\r\n            //console.log('error', err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\" sx={{ backgroundColor:'#eba848' }} elevation={12}>\r\n                  <Toolbar sx={{ color:'#36393e'}}>\r\n                        <Typography variant=\"h3\" align=\"left\" sx={{flexGrow: 2}}>\r\n                            Taskify\r\n                        </Typography>\r\n                        <IconButton sx={{marginRight:'5px'}} onClick={openFormDialog}>\r\n                            <ArticleIcon/>\r\n                        </IconButton>\r\n                        <ProfileDialog dialogTrigger={openDialog} dialogCloser ={closeFormDialog} dialogTitle={'Tutorial'}/>\r\n                        <IconButton sx={{marginRight:'20px'}} onClick={endSession}>\r\n                            <LogoutIcon/>\r\n                        </IconButton>\r\n                  </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n};\r\nexport default TopBar;","import React from 'react';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const Toast = () => {\r\n    return (\r\n        <ToastContainer\r\n            position=\"bottom-left\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n        />\r\n    );\r\n};\r\nexport default Toast;","import React, {useState} from 'react'\r\nimport {makeStyles} from '@mui/styles'\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, Typography, TextField, Grid, IconButton} from '@mui/material/';\r\nimport AddTaskIcon from '@mui/icons-material/AddTask';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport {toast} from 'react-toastify';\r\nimport Toast from '../Toast';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogTitle:{\r\n        backgroundColor:'#eba848',\r\n        borderTopRightRadius:'50px 20px',\r\n        borderTopLeftRadius: '50px 20px',\r\n        [theme.breakpoints.down('md')]: {\r\n            height:'42px',\r\n        },\r\n    },\r\n    dialogBody:{\r\n        backgroundColor:'#eba848',\r\n        overflow:'inherit',\r\n        [theme.breakpoints.down('md')]: {\r\n            height:'68%',\r\n        },      \r\n    },\r\n    dialog:{  \r\n        '& .MuiPaper-root':{\r\n            backgroundColor:'#3e4452',\r\n            width:'70%',\r\n            [theme.breakpoints.down('md')]: {\r\n                width:'100%',\r\n                height:'100%',\r\n            }, \r\n        },\r\n    },\r\n}));\r\n\r\nconst FormDialog = ({dialogTrigger, dialogCloser, taskHandler, dialogTitle, task}) => {\r\n    const classes = useStyles();\r\n    const [title, setTitle] = useState(task? task.title : '');  \r\n    const [description, setDescription] = useState('');\r\n\r\n    const notify = () => toast.info(task? 'Task edited successfully' : `New Task: ${title}`, {\r\n        position: \"bottom-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'dark'\r\n    });\r\n\r\n    const createTask = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            credentials: 'include',\r\n            body: JSON.stringify({title: title, description: description})\r\n        }\r\n        fetch('/task/createTask', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            taskHandler();\r\n            dialogCloser();\r\n            notify();\r\n            setTitle('');\r\n            setDescription('');\r\n        })\r\n        .catch(err =>{\r\n            //console.log(\"ERRROR\" , err);\r\n        });\r\n    };\r\n\r\n    const editTask = () => {\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            credentials: 'include',\r\n            body: JSON.stringify({title: title, description: description,})\r\n        }\r\n        fetch(`/task/updateTaskById?id=${task.id}`, requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            taskHandler();\r\n            dialogCloser();\r\n            notify();\r\n            setTitle('');\r\n            setDescription('');\r\n        })\r\n        .catch(err =>{\r\n            //console.log('ERROR', err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Toast/>\r\n            <Dialog\r\n                className={classes.dialog}\r\n                open={dialogTrigger}\r\n                onClose={dialogCloser}\r\n            >\r\n                <DialogTitle/>\r\n                <DialogTitle className={classes.dialogTitle}>\r\n                    <Typography align='center' variant='h5' sx={{color:'#282c34'}}>\r\n                        {dialogTitle}\r\n                    </Typography>\r\n                </DialogTitle>\r\n                <form className={classes.form} onSubmit={e => e.preventDefault()}>\r\n                    <DialogContent className={classes.dialogBody}>\r\n                            <Grid \r\n                                container \r\n                                rowSpacing={2} \r\n                                direction=\"column\" \r\n                                justifyContent=\"center\" \r\n                                alignItems=\"center\"\r\n                                alignItems=\"strech\"\r\n                            >\r\n                                <Grid item xs={12} >\r\n                                    <TextField\r\n                                        onChange={(event) => setTitle(event.target.value)}\r\n                                        fullWidth\r\n                                        label=\"Title\"\r\n                                        required\r\n                                        inputProps={{maxLength: 40}}\r\n                                        multiline\r\n                                        variant=\"filled\"\r\n                                        defaultValue={task? task.title : title}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        onChange={(event) => setDescription(event.target.value)}\r\n                                        fullWidth\r\n                                        label=\"Description\"\r\n                                        inputProps={{maxLength: 120}}\r\n                                        multiline\r\n                                        variant='filled'\r\n                                        rows={5}\r\n                                        defaultValue={task? task.description : ''}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>        \r\n                    </DialogContent>\r\n                    <DialogActions className={classes.dialogBody}>\r\n                            <IconButton \r\n                                onClick={dialogCloser} \r\n                                size=\"large\" \r\n                                sx={{color:'#740000'}}\r\n                            >\r\n                                <HighlightOffIcon/>\r\n                            </IconButton>\r\n                            <IconButton \r\n                                onClick={!task? createTask : editTask}\r\n                                size=\"large\"\r\n                                sx={{color:'#1c7406'}} \r\n                                disabled={title === ''? true : false}\r\n                            >\r\n                                <AddTaskIcon/>\r\n                            </IconButton>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n};\r\nexport default FormDialog;","import React, {useState} from 'react';\r\nimport {Fab} from '@mui/material/';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport FormDialog from '../dialogs/FormDialog';\r\n\r\nconst NewTaskButton = ({newTaskHandler}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const openFormDialog = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const closeFormDialog = () => {\r\n        setOpenDialog(false);\r\n    };\r\n \r\n    return (\r\n        <>\r\n            <Fab variant=\"contained\" onClick={openFormDialog} size=\"large\" sx={{backgroundColor:'#eba848'}}>\r\n                <AddIcon/>\r\n            </Fab>\r\n            <FormDialog \r\n                dialogTrigger={openDialog} \r\n                dialogCloser ={closeFormDialog} \r\n                taskHandler={newTaskHandler} \r\n                dialogTitle={'Create Task'}\r\n            />  \r\n        </>\r\n    );\r\n};\r\nexport default NewTaskButton;","import { styled } from '@mui/material/styles';\r\nimport {Accordion, AccordionSummary, AccordionDetails} from '@mui/material/';\r\n\r\nexport const StyledAccordion = styled(Accordion)({\r\n    margin:'20px',\r\n});\r\n\r\nexport const StyledAccordionSummary = styled(AccordionSummary)({\r\n    backgroundColor:'#eba848',\r\n    '& .MuiAccordionSummary-content':{\r\n        justifyContent:'center',\r\n    },\r\n});\r\n\r\nexport const StyledAccordionDetails = styled(AccordionDetails)({\r\n    backgroundColor: '#212121',\r\n});","import React from 'react';\r\nimport {IconButton} from '@mui/material/';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Toast from '../Toast';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst DeleteTaskButton = ({task, taskHandler}) => {\r\n\r\n    const notify = () => toast.error('Task Deleted', {\r\n        position: \"bottom-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'dark'\r\n    });\r\n\r\n    const deleteTask = async () => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {'Content-Type': 'application/json'},\r\n            credentials: 'include',\r\n            body: JSON.stringify({user_id: task.user_id})\r\n        }\r\n        fetch(`/task/deleteTaskById?id=${task.id}`, requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            taskHandler();\r\n            notify();\r\n        })\r\n        .catch(err =>{\r\n            //console.log('ERROR', err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <IconButton size=\"medium\" onClick={deleteTask} sx={{color:'#740000'}}>\r\n            <DeleteIcon/>\r\n        </IconButton> \r\n        <Toast/>\r\n        </>    \r\n    );\r\n};\r\nexport default DeleteTaskButton;","import React, {useState} from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FormDialog from '../dialogs/FormDialog';\r\nimport {IconButton} from '@mui/material';\r\n\r\nconst EditTaskButton = ({task, taskHandler}) => {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const openFormDialog = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const closeFormDialog = () => {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton size=\"medium\" onClick={openFormDialog} sx={{color:'#0538aa'}}>\r\n                <EditIcon/>\r\n            </IconButton>\r\n            <FormDialog \r\n                dialogTrigger={openDialog} \r\n                dialogCloser ={closeFormDialog} \r\n                taskHandler={taskHandler} \r\n                dialogTitle={'Edit Task'} \r\n                task={task}\r\n            />\r\n        </>    \r\n    );\r\n};\r\nexport default EditTaskButton;","import React from 'react';\r\nimport {IconButton} from '@mui/material/';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport Toast from '../Toast';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TaskDoneButton = ({task, taskHandler}) => {\r\n    const notify = () => toast.success('Task completed!', {\r\n        position: \"bottom-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'dark'\r\n    });\r\n\r\n    const taskDone = async () => {\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            credentials: 'include',\r\n            body: JSON.stringify({completed: true})\r\n        }\r\n        fetch(`/task/updateTaskById?id=${task.id}`, requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            taskHandler();\r\n            notify();\r\n        })\r\n        .catch(err =>{\r\n            //console.log('ERROR', err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton size=\"medium\" onClick={taskDone} sx={{color:'#1c7406'}}>\r\n                <CheckCircleIcon/>\r\n            </IconButton> \r\n            <Toast/>\r\n        </>    \r\n    );\r\n};\r\nexport default TaskDoneButton;","import React from 'react';\r\nimport {Card, CardActions, CardContent, Typography, Divider} from '@mui/material/';\r\nimport DeleteTaskButton from '../buttons/DeleteTaskButton'\r\nimport EditTaskButton from '../buttons/EditTaskButton';\r\nimport TaskDoneButton from '../buttons/TaskDoneButton';\r\n\r\n\r\nconst TaskCard = ({task, taskHandler}) => {\r\n    return (\r\n            <Card sx={{borderRadius:'30px', backgroundColor: !task.completed? '#43be88' : '#e24343', marginBottom:'10px'}}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" align='left'>\r\n                        {task && task.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" component='p' align='left'>\r\n                        {task && task.description}\r\n                    </Typography>\r\n                </CardContent>\r\n                <Divider/>\r\n                <CardActions sx={{justifyContent:'flex-end'}}>\r\n                    <DeleteTaskButton task={task} taskHandler={taskHandler}/>\r\n                    {\r\n                        !task.completed &&\r\n                        (\r\n                            <>   \r\n                                <EditTaskButton task={task} taskHandler={taskHandler}/>\r\n                                <TaskDoneButton task={task} taskHandler={taskHandler}/> \r\n                            </>                          \r\n                        ) \r\n                    }\r\n                </CardActions>\r\n            </Card>\r\n    );\r\n};\r\nexport default TaskCard;","import React from 'react';\r\nimport {Typography} from '@mui/material/';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {StyledAccordion, StyledAccordionSummary, StyledAccordionDetails} from '../../muiThemeConfig/StyledAccordion';\r\nimport TaskCard from './TaskCard';\r\n\r\nconst TaskContainer = ({tasksData, containerTitle, taskHandler}) => {\r\n    return (\r\n        <div>\r\n            <StyledAccordion elevation={10} defaultExpanded>\r\n                <StyledAccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                >\r\n                    <Typography variant='h5' align='center'>{containerTitle}</Typography>\r\n                </StyledAccordionSummary>\r\n                <StyledAccordionDetails >\r\n                        {\r\n                            tasksData &&\r\n                            tasksData.map((task) => <TaskCard task={task} taskHandler={taskHandler}/>)\r\n                        }\r\n                </StyledAccordionDetails>\r\n            </StyledAccordion>\r\n        </div>\r\n    );\r\n};\r\nexport default TaskContainer;","import React, {useState, useEffect} from 'react';\r\nimport {Grid, Container} from '@mui/material/';\r\nimport TopBar from '../components/topBar/TopBar';\r\nimport NewTaskButton from '../components/buttons/NewTaskButton';\r\nimport TaskContainer from '../components/taskcomponents/TaskContainer';\r\n\r\nconst MainPage = ({logOut}) => {\r\n    const [taskWatcher, setTaskWatcher] = useState(1);\r\n    const [pendingTasks, setPendingTasks] = useState();\r\n    const [completedTasks, setCompletedTasks] = useState();\r\n\r\n    const taskHandler = () => {\r\n        setTaskWatcher(taskWatcher+1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`/task/getTasks`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setPendingTasks(data.filter(task => task.completed === false));\r\n            setCompletedTasks(data.filter(task => task.completed === true));\r\n        })\r\n        .catch((err) =>{\r\n            //console.log('error', err);\r\n        });  \r\n    }, [taskWatcher]);\r\n\r\n    return (\r\n        <div>\r\n            <TopBar logOut={logOut}/>\r\n            <Container maxWidth=\"m\">\r\n                <Grid container justifyContent=\"center\" sx={{marginBottom:'70px'}}>\r\n                    <Grid item sx={{padding:'25px'}}>\r\n                        <NewTaskButton newTaskHandler={taskHandler}/>\r\n                    </Grid>\r\n                    <Grid container spacing={5} rowSpacing={1} justifyContent=\"center\">\r\n                        <Grid item xs={12} sm={12} md={5}>\r\n                            <TaskContainer tasksData={pendingTasks} containerTitle={'Pendings'} taskHandler={taskHandler}/>  \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={5}>\r\n                            <TaskContainer tasksData={completedTasks} containerTitle={'Completed'} taskHandler={taskHandler}/>\r\n                        </Grid>   \r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\nexport default MainPage;","import { createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n    typography:{\r\n        fontFamily:['Roboto Condensed','sans-serif' ].join(','),\r\n        h1:{\r\n            fontFamily:['Roboto Condensed','sans-serif' ].join(','),\r\n            color:'white'  \r\n        },\r\n        h2:{\r\n            fontFamily:['Roboto Condensed','sans-serif' ].join(','),\r\n        },\r\n        h3:{\r\n            fontFamily:['Roboto Condensed','sans-serif' ].join(','),\r\n            fontWeight: 700\r\n        },\r\n        h4:{\r\n            fontFamily:['Roboto Condensed','sans-serif' ].join(','),\r\n            fontWeight: 350\r\n        },\r\n        h5:{\r\n            fontFamily:['Roboto Condensed','sans-serif' ].join(','),\r\n            fontWeight: 500\r\n        },\r\n        h6:{\r\n            fontFamily:['Roboto Condensed','sans-serif' ].join(','),\r\n        },\r\n        body1:{\r\n            fontFamily:['Work Sans', 'sans-serif'].join(','),\r\n        },\r\n        body2:{\r\n            fontFamily:['Work Sans', 'sans-serif'].join(','),\r\n            fontWeight: 550\r\n        },\r\n    },\r\n    palette:{\r\n        primary:{\r\n            main:'#212121',\r\n            light:'#eba848'\r\n        },\r\n        secondary:{\r\n            main:'#000000',\r\n            light:'#ffffff'\r\n        },\r\n    },\r\n});\r\nexport default theme;","import React from 'react';\r\nimport {makeStyles} from '@mui/styles';\r\nimport {Typography, IconButton, Box} from '@mui/material/';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography:{\r\n        paddingTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function Footer() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{\r\n                position: 'fixed',\r\n                padding: '10px 10px 0px 10px',\r\n                bottom: 0,\r\n                width: '100%',\r\n                height: '65px',\r\n                background: '#191919',\r\n            }}>\r\n                <Typography variant='body2' color='secondary.light' align='center' className={classes.typography}>\r\n                    Copyright © Taskify by Leandro Lopez{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n                <IconButton sx={{color:'white'}} size='small' href='https://www.linkedin.com/in/leandro-l%C3%B3pez-catalini-9628b21a2/'>\r\n                    <LinkedInIcon/>\r\n                </IconButton>\r\n                <IconButton sx={{color:'white'}} size='small' href='https://github.com/leanwayne/Taskify'>\r\n                    <GitHubIcon/>\r\n                </IconButton> \r\n            </Box>\r\n        </>\r\n    );\r\n};","import React, {useState} from 'react'\r\nimport Hero from './layouts/Hero';\r\nimport MainPage from './layouts/MainPage';\r\nimport theme from './muiThemeConfig/ThemeConfig';\r\nimport {ThemeProvider} from '@mui/material/styles';\r\nimport Footer from './components/Footer';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [logged, setLogged] = useState(false);\r\n    const [userData, setUserData] = useState({});\r\n\r\n    const changeLogStatus = (data) => {\r\n        setUserData(\r\n            {\r\n                id: data.passport.user.id,\r\n                username: data.passport.user.username,\r\n            }\r\n        );\r\n        setLogged(true);  \r\n    };\r\n\r\n    const logOut = () => {\r\n        setLogged(false);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n            {!logged?\r\n                <Hero changeLogStatus={changeLogStatus} /> :\r\n                <MainPage logOut={logOut}/>\r\n            }\r\n            <Footer/>\r\n        </div>\r\n        </ThemeProvider>\r\n    );\r\n};\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}